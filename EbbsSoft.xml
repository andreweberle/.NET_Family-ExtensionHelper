<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EbbsSoft</name>
    </assembly>
    <members>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsNull``1(``0)">
            <summary>
            Check if an object is null.
            </summary>
            <param name="obj"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.WaitForFile(System.String)">
            <summary>
            Wait For A File.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsHoliday(System.DateTime)">
            <summary>
            Check If Its a Public Holiday
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.ConnectedToServerAsync(System.Data.SqlClient.SqlConnection)">
            <summary>
            Check Connection To SQL Server Async
            </summary>
            <param name="sqlConnection"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.ResetTableSeed(System.Data.SqlClient.SqlConnection,System.String,System.Int32)">
            <summary>
            Reset a Tables Seed.
            </summary>
            <param name="sqlConn">Connection To SQL Database</param>
            <param name="tableName">TableName</param>
            <param name="seed">Seed Starting Point</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsEmpty``1(System.Collections.Generic.List{``0})">
            <summary>
            Check if a T type list is empty.
            </summary>
            <param name="list"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsReadOnly(System.IO.FileInfo)">
            <summary>
            Is File Read Only?
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsReadOnly(System.String)">
            <summary>
            Is File Read Only
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.AddReadOnlyAttribute(System.IO.FileInfo)">
            <summary>
            Change File To Read Only
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.AddReadOnlyAttribute(System.String)">
            <summary>
            Change File To Read Only
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.RemoveReadOnlyAttribute(System.IO.FileInfo)">
            <summary>
            Remove Read Only Property
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.RemoveReadOnlyAttribute(System.String)">
            <summary>
            Remove Read Only Property
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsOdd(System.Int32)">
            <summary>
            Check If Given Number Is An Odd Number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsEmpty(System.String)">
            <summary>
            Check For Empty String
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsDigitsOnly(System.String)">
            <summary>
            Check String For Only Digits
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.ValidateLuhn(System.String)">
            <summary>
            Validate Luhun (Mod10)
            </summary>
            <param name="sum"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.ValidateLuhn(System.Int32)">
            <summary>
            Validate Luhn (Mod10)
            </summary>
            <param name="sum"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsFileLocked(System.String)">
            <Summary>
            Check If The Given File Path
            Is Locked/Not Useable
            </Summary>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsValidPhoneNumber(System.String)">
            <summary>
            Validate An Australian Phone Number
            eg 0354xxxxxx | 0412xxxxxx
            </summary>
            <param name="phoneNumber">Australian Phone Number</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsValidLength(System.String,System.Int32)">
            <summary>
            Return true or false
            if a string object meets the
            minimum length requirement.
            </summary>
            <param name="string"></param>
            <param name="minimumLength"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsValidEmailAddress(System.String)">
            <summary>
            https://stackoverflow.com/questions/1365407/c-sharp-code-to-validate-email-address
            Validate an email address.
            </summary>
            <param name="emailAddress"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.TryWriteToTextFile(System.String,System.String,System.Boolean)">
            <summary>
            Write text to a text file
            </summary>
            <param name="textFilePath">Destination Of File</param>
            <param name="givenParameters"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.TryCreateTextFile(System.String)">
            <summary>
            Create an Empty Text File
            </summary>
            <param name="textFilepath">Destination Location</param>
            <returns></returns>
        </member>
        <member name="P:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsWindows">
            <Summary>
            Check If The Operating System Is Windows
            </Summary>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsValidFilePath(System.String)">
            <summary>
            Returns if the given file path exists.
            </summary>
            <param name="fullFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsValidDirectoryPath(System.String)">
            <summary>
            Returns if the given path is vaild or not.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.HasDuplicateItem``1(``0[])">
            <summary>
            Check if an object array has a duplicate object,
            </summary>
            <param name="arrayList"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.CompareFileVersionTo(System.String,System.String)">
            <summary>
            Compare File Versions
            </summary>
            <param name="filePath0"></param>
            <param name="filePath1"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.BooleanHelpers.Utils.IsPostOfficeBox(System.String)">
            <summary>
            Check If The Given Address Is A PostOffice Or Not.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.ByteHelpers.Utils.StreamToByteArray(System.IO.Stream)">
            <summary>
            Convert Stream To Byte Array
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.ByteHelpers.Utils.ImageToBytes(System.Drawing.Image)">
            <summary>
            Image To Byte Array.
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.CharHelpers.Utils.RecuriveChar(System.String)">
            <summary>
            Returns the first Recurive Char of a string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EbbsSoft.ExtensionHelpers.DateTimeHelpers.Utils.AddWorkingDays(System.DateTime,System.Int32)" -->
        <member name="M:EbbsSoft.ExtensionHelpers.DateTimeHelpers.Utils.GetDateTimeFromInternet(System.DateTime,System.String)">
            <summary>
            Get DateTimeFromInternet
            </summary>
            <param name="dt"></param>
            <param name="username">username required, Sign up for an account http://api.geonames.org</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DecimalsHelpers.Utils.GetCoordinates">
            <summary>
            Get Current Coordinates
            </summary>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DoubleHelpers.Utils.ToFahrenheit(System.Double)">
            <summary>
            Convert From Celsius To Fahrenheit
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DoubleHelpers.Utils.ToFahrenheit(System.Int32)">
            <summary>
            Convert From Celsius To Fahrenheit
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DoubleHelpers.Utils.ToCelsius(System.Double)">
            <summary>
            Convert From Fahrenheit To Celsius
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DoubleHelpers.Utils.ToCelsius(System.Int32)">
            <summary>
            Convert From Fahrenheit To Celsius
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DoubleHelpers.Utils.UnixToDateTime(System.Double)">
            <summary>
            Unix TimeStamp To DateTime
            </summary>
            <param name="unixTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DoubleHelpers.Utils.DateTimeToUnix(System.DateTime)">
            <summary>
            DateTime To Unix TimeStamp
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.DynamicHelpers.utlis.BubbleSort(System.Int32[])">
            <summary>
            Bubble Sort
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="T:EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.OutputStyle">
            <summary>
            Output Style Required For For PrintColouredText
            </summary>
        </member>
        <member name="T:EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.EncodingFormat">
            <summary>
            Encoding Types
            </summary>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.ToEnum``1(System.String)">
            <summary>
            Convert A String To An Enum
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.EnumDescriptionToString(System.Enum)">
            <summary>
            Get the Enum Value to String
            </summary>
            <param name="enum"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.Reverse(System.Int32[])">
            <summary>
            Reverse a Number Set.
            </summary>
            <param name="numbers"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetTrueRandom(System.Int32)">
            <summary>
            Generate a true random From 0 to (n)
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetBytesCount(System.String,EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.EncodingFormat)">
            <summary>
            Return the number of bytes
            for a string object.
            </summary>
            <param name="string"></param>
            <param name="encodingFormat"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.WordCount(System.String)">
            <summary>
            Counts the number of words in a string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.AgeFromDateTime(System.DateTime)">
            <summary>
            Get the age from DateTime
            </summary>
            <param name="dateTime">Birthday</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetFileSizeFromURL(System.String)">
            <summary>
            Get File Size From URL
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetLast(System.Int32,System.Int32)">
            <summary>
            Get Last (n) of an int
            </summary>
            <param name="source"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetLast(System.Decimal,System.Int32)">
            <summary>
            Get Last (n) of a decimal
            </summary>
            <param name="source"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetLast(System.Double,System.Int32)">
            <summary>
            Get Last (n) of a double
            </summary>
            <param name="source"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.IntegerHelpers.Utils.GetLast(System.Int64,System.Int32)">
            <summary>
            Get Last (n) of a long
            </summary>
            <param name="source"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.ObjectHelpers.Utils.WatchPath(System.String,System.String)">
            <summary>
            System Path Watcher.
            </summary>
            <param name="path">path to watch</param>
            <param name="filter">watch path for files with extension x</param>
            <returns></returns>     
        </member>
        <member name="T:EbbsSoft.ExtensionHelpers.Overrides.Utils.Utf8StringWriter">
            <summary>
            UTF-8 String Writer
            </summary>
        </member>
        <member name="P:EbbsSoft.ExtensionHelpers.Overrides.Utils.Utf8StringWriter.Encoding">
            <summary>
            Override Encoding Type To UTF-8
            </summary>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StreamHelpers.Utils.ToMemoryStream(System.Byte[])">
            <summary>
            Byte Array To Memory Stream
            </summary>
            <param name="byteArray"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StreamHelpers.Utils.ToMemoryStream(System.String,EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.EncodingFormat)">
            <summary>
            return a string to a memory stream.
            </summary>
            <param name="value"></param>
            <param name="encodingType"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StreamHelpers.Utils.ToStream(System.String)">
            <summary>
            String to Stream.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.TryReadValueFromXmlDoc(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Returns a particular value from an Xml Document
            object type.
            </summary>
            <param name="xmlDocument"></param>
            <param name="elementTagName"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.TryReadValueFromXmlDoc(System.Xml.XmlDocument,System.String)">
            <summary>
            Returns a particular value from an xml document
            using an xpath eg "//Person/FirstName"
            </summary>
            <param name="xmlDocument"></param>
            <param name="xPath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToWords(System.Int32)">
            <summary>
            Convert A Number To
            Readable English
            https://stackoverflow.com/questions/554314/how-can-i-convert-an-integer-into-its-verbal-representation
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.AssemblyVersion(System.String)">
            <summary>
            Get the Assembly File Version.
            </summary>
            <param name="assemblyPath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.BytesToHumanReadableSize(System.Object)">
            <summary>
            Converts an Object type (if valid) into a 
            readable size value
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.GetMimeType(System.String)">
            <summary>
            Get the file mime type.
            </summary>
            <param name="filePathLocation">file path location</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.TryGetFileCheckSum(System.String)">
            <summary>
            Calculate MD5
            </summary>
            <param name="filePath">file path</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ReplaceMultiple(System.String,System.Char[],System.Char)">
            <summary>
            Replace Multiple Chars All At Once.
            </summary>
            <param name="string"></param>
            <param name="charsToRemove"></param>
            <param name="replacementChar"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.PrintColouredText(System.String,System.ConsoleColor,EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.OutputStyle)">
            <Summary>
            Write Coloured Text To The Console.
            </Summary>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.Owner(System.IO.FileInfo)">
            <Summary>
            Returns the file's creator
            </Summary>
            <param name="fileInfo">FileInfo Object</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.Owner(ZetaLongPaths.ZlpFileInfo)">
            <Summary>
            Returns the file's creator
            </Summary>
            <param name="zetaFileInfo">ZetaFileInfo Object</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ExtractHyperLinkFromData(System.String)">
            <summary>
            Extract A Hyper Link From an ahref property.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.RemoveIllegalCharsFromPath(System.String)">
            <summary>
            Remove Illegal Chars From Path
            [ File Name May Not Be Included ]
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.TryExtractTextFromPDF(System.String)">
            <summary>
            Extract Text From A Pdf.
            </summary>
            <param name="pdf_File"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToCXML(System.Object)">
            <summary>
            Convert an Object To CXML
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToXML(System.Object)">
            <summary>
            Convert an Object To XML.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToCurrency(System.String)">
            <summary>
            Convert a string to a currency Format
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToCurrency(System.Int32)">
            <summary>
            Convert an int to a currency Format
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToCurrency(System.Double)">
            <summary>
            Convert a double to a currency Format
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToCurrency(System.Decimal)">
            <summary>
            Convert a decimal to a currency Format
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.GetExtension(System.String)">
            <summary>
            Get File Extension Type.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.Reverse(System.String)">
            <summary>
            Reverse a String.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.TrySplitInPartsOf(System.String,System.Int32)">
            <summary>
            Split a string in parts
            </summary>
            <param name="value"></param>
            <param name="numberOfParts"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToJson(System.String)">
            <summary>
            Convert To Json
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToJson(System.Object)">
            <summary>
            Convert an Object To Json.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToTitleCase(System.String)">
            <summary>
            Returns A String To Title Case
            Eg hello world --> Hello World
            </summary>
            <param name="str">Value</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.ToCamelCase(System.String)">
            <Summary>
            Return the given string with camel casing.
            </Summary>
            <param name="str">Value</param>
            <returns>string [CamelCase]</returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.PathFromSolutionFolder(System.String)">
            <summary>
            Get File From Solution Folder Application.
            </summary>
            <param name="filePath">Path Within Solution</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.PathFromSolutionFolderWeb(System.String)">
            <summary>
            Get File From Solution Folder Web.
            </summary>
            <param name="filePath">Path Within Solution</param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.GetLast(System.String,System.Int32)">
            <summary>
            Get The Last (n) of a String.
            </summary>
            <param name="str"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.StringHelpers.Utils.GetDirectoryName(System.String)">
            <summary>
            Return The Paths Directory Name Only.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.PrintEvent(System.String,EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.PrintEventType,System.ConsoleColor)">
            <summary>
            Print Event Style Message.
            </summary>
            <param name="context"></param>
            <param name="eventType"></param>
            <param name="colour"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.PrintEvent(System.String,System.String,System.ConsoleColor)">
            <summary>
            Print Event Style Message.
            </summary>
            <param name="context"></param>
            <param name="eventType"></param>
            <param name="colour"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.Swap(System.String@,System.String@)">
            <summary>
            Preform a swap between two strings
            objects.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.Swap(System.Int32@,System.Int32@)">
            <summary>
            Preform a swap between two integers
            objects.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.Swap(System.Object@,System.Object@)">
            <summary>
            Preform a swap between two objects
            objects.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils._CopyDirectory(System.String,System.String)">
            <summary>
            C# Has no built in Folder Copy Function like VB.NET
            https://msdn.microsoft.com/en-us/library/system.io.directoryinfo.aspx
            Call Method using eg CopyDirectory(sourceDir,destinationDir);
            </summary>
            <param name="sourceDirectory">Source Directory Path</param>
            <param name="targetDirectory">Destination Directory Path</param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.PrintColouredText(System.ConsoleColor,System.ConsoleColor,System.String,EbbsSoft.ExtensionHelpers.EnumHelpers.Utils.OutputStyle)">
            <Summary>
            Write Coloured Text To The Console.
            </Summary>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.TryMoveFilesTo(System.String,System.String)">
            <summary>
            Moves files from one directory to another.
            </summary>
            <param name="sourceDirectory"></param>
            <param name="destinationDirectory"></param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.TryCreateDirectory(System.String)">
            <summary>
            Create a new directory
            </summary>
            <param name="path">path to new directory</param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.VoidHelpers.Utils.TryCopyDirectory(System.String,System.String)">
            <summary>
            Copy directory to a new destination
            </summary>
            <param name="sourceDirectory">Source Directory</param>
            <param name="targetDirectory">Targe Directory</param>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.XmlHelpers.Utils.ToXmlDocument(System.Xml.Linq.XDocument)">
            <summary>
            Convert an XML Document to an XDocument
            </summary>
            <param name="xDocument"></param>
            <returns></returns>
        </member>
        <member name="M:EbbsSoft.ExtensionHelpers.XmlHelpers.Utils.ToXDocument(System.Xml.XmlDocument)">
            <summary>
            Convert an XDocument to an XML Document
            </summary>
            <param name="xmlDocument"></param>
            <returns></returns>
        </member>
    </members>
</doc>
